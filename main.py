import streamlit as st
from streamlit_option_menu import option_menu
from streamlit_lottie import st_lottie
from components import page1, page2
import json
import base64

from components import chatbot
# from components import business, land_prediction, strategy, estimation, methodology, about, crime, life_quality

# Apply theme from the config file
st.set_page_config(
    page_title="–û–≥–æ –ø—Ä–æ–µ–∫—Ç",
    layout="centered",
    initial_sidebar_state="expanded"
)

class MultiApp:
    def __init__(self):
        self.apps = []

    def add_app(self, title, func):
        self.apps.append({
            "title": title,
            "function": func
        })

    def run(self):
        # Create a sidebar option menu
      
        with st.sidebar:
            app = option_menu(
                menu_title='–ù–∞—á–∞–ª–æ',
                options=['–¥–æ–º', '–∫–∞—Ä—Ç—ã', 'Chat-BOT'],
                icons=['house-garden','house-garden','house-garden'],
                menu_icon='house-garden',
                default_index=0,  # Change the default index to 0 for "üè† –ü—Ä–æ–≥–Ω–æ–∑ —Å—Ç–æ–∏–º–æ—Å—Ç–∏"
                styles={
                    "container": {"padding": "5!important", "width": "100%"},  # Adjust width here
                    # "icon": {"color": "white", "font-size": "0px"},
                    "nav-link": {"font-size": "20px", "text-align": "left", "margin":"0px", "--hover-color": "orange"},
                    "nav-link-selected": {"background-color": "#44484d"},
                }

            )
        

        # with st.sidebar:
        #     app = option_menu(
        #         menu_title='–ù–∞—á–∞–ª–æ',
        #         options=['üè∑Ô∏è –ü—Ä–æ–≥–Ω–æ–∑ —Å—Ç–æ–∏–º–æ—Å—Ç–∏', 'üèôÔ∏è –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏', 'üè° –û—Ü–µ–Ω–∫–∞ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
        #                  'üéØ –†–∞—Å—á–µ—Ç –ø–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏','üëÆüèª‚Äç‚ôÇÔ∏è –ü—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç—å', 
        #                  'üó∫Ô∏è –ö–∞—Ä—Ç–∞ + AI', 'üèôÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–≤–∞—Ä—Ç–∞–ª–∞–º',
        #                  'üìí –ú–µ—Ç–æ–¥–∏–∫–∞','üìñ –≠–∫–æ–Ω–æ–º–∏–∫–∞'],
        #         icons=['house-garden','house-garden','house-garden','house-garden','house-garden', 'house-garden',
        #                'house-garden', 'house-garden', 'house-garden'],
        #         menu_icon='house-garden',
        #         default_index=0,  # Change the default index to 0 for "üè† –ü—Ä–æ–≥–Ω–æ–∑ —Å—Ç–æ–∏–º–æ—Å—Ç–∏"
        #         styles={
        #             "container": {"padding": "5!important", "width": "100%"},  # Adjust width here
        #             # "icon": {"color": "white", "font-size": "0px"},
        #             "nav-link": {"font-size": "20px", "text-align": "left", "margin":"0px", "--hover-color": "orange"},
        #             "nav-link-selected": {"background-color": "#44484d"},
        #         }

        #     )


        # Display selected app based on user choice
        if app == "–¥–æ–º":
            page1.app()
        elif app == "–∫–∞—Ä—Ç—ã":
            page2.app()
        elif app == "Chat-BOT":
            chatbot.app()   
        
        
        # if app == "üè∑Ô∏è –ü—Ä–æ–≥–Ω–æ–∑ —Å—Ç–æ–∏–º–æ—Å—Ç–∏":
        #     land_prediction.app()
        # elif app == "üèôÔ∏è –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏":
        #     recommendations.app()
        # elif app == "üè° –û—Ü–µ–Ω–∫–∞ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏":
        #     estimation.app()   
        # elif app == "üéØ –†–∞—Å—á–µ—Ç –ø–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏":
        #     strategy.app()        
        # elif app == 'üëÆüèª‚Äç‚ôÇÔ∏è –ü—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç—å':
        #     crime.app()
        # elif app == 'üó∫Ô∏è –ö–∞—Ä—Ç–∞ + AI':
        #     business.app()
        # elif app == 'üèôÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–≤–∞—Ä—Ç–∞–ª–∞–º':
        #     life_quality.app() 
        # elif app == 'üìí –ú–µ—Ç–æ–¥–∏–∫–∞':
        #     methodology.app()
        # elif app == 'üìñ –≠–∫–æ–Ω–æ–º–∏–∫–∞':
        #     about.app()

# Create an instance of MultiApp and add your apps
multi_app = MultiApp()

# Add your apps to the MultiApp instance
multi_app.add_app("–¥–æ–º", page1.app)
multi_app.add_app("–∫–∞—Ä—Ç—ã", page2.app)
multi_app.add_app("—á–∞—Ç-–±–æ—Ç", chatbot.app)

def get_base64_of_bin_file(bin_file):
    with open(bin_file, 'rb') as f:
        data = f.read()
    return base64.b64encode(data).decode()

def set_background(png_file):
    bin_str = get_base64_of_bin_file(png_file)
    page_bg_img = f'''
    <style>
    .stApp {{
        background-image: url("data:image/png;base64,{bin_str}");
        background-size: cover;
        background-attachment: fixed;
    }}
    </style>
    '''
    st.markdown(page_bg_img, unsafe_allow_html=True)

# –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É —Ñ–∞–π–ª—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
set_background('image/ata3.png')

# def get_base64_of_bin_file(bin_file):
#     with open(bin_file, 'rb') as f:
#         data = f.read()
#     return base64.b64encode(data).decode()

# def set_background(png_file):
#     bin_str = get_base64_of_bin_file(png_file)
#     page_bg_img = f'''
#     <style>
#     .stApp {{
#         background-image: url("data:image/png;base64,{bin_str}");
#         background-size: cover;
#         background-attachment: fixed;
#         position: relative;
#     }}
#     .overlay {{
#         position: absolute;
#         top: 0;
#         left: 0;
#         right: 0;
#         bottom: 0;
#         background-color: rgba(255, 255, 255, 0.7); /* Change this color and opacity as needed */
#         z-index: 1;
#     }}
#     .content {{
#         position: relative;
#         z-index: 2;
#     }}
#     </style>
#     <div class="overlay"></div>
#     '''
#     st.markdown(page_bg_img, unsafe_allow_html=True)

# # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É —Ñ–∞–π–ª—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
# set_background('image/ata1.png')

# st.markdown('<div class="content">', unsafe_allow_html=True)
# st.image('image/ata1.png', caption='Sample Image')
# st.markdown('</div>', unsafe_allow_html=True)

# multi_app.add_app("üè∑Ô∏è –ü—Ä–æ–≥–Ω–æ–∑ —Å—Ç–æ–∏–º–æ—Å—Ç–∏", land_prediction.app)
# multi_app.add_app("üèôÔ∏è –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", recommendations.app)
# multi_app.add_app("üè° –û—Ü–µ–Ω–∫–∞ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏", estimation.app)
# multi_app.add_app("üéØ –†–∞—Å—á–µ—Ç –ø–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏", strategy.app)
# multi_app.add_app("üëÆüèª‚Äç‚ôÇÔ∏è –ü—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç—å", crime.app)
# multi_app.add_app("üó∫Ô∏è –ö–∞—Ä—Ç–∞ + AI", business.app)
# multi_app.add_app("üèôÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–≤–∞—Ä—Ç–∞–ª–∞–º", life_quality.app)
# multi_app.add_app("üìí –ú–µ—Ç–æ–¥–∏–∫–∞", methodology.app)
# multi_app.add_app("üìñ –≠–∫–æ–Ω–æ–º–∏–∫–∞", about.app)


# Run the MultiApp
multi_app.run()